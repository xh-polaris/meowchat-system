// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/meowchat-system/biz/adaptor"
	"github.com/xh-polaris/meowchat-system/biz/application/service"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/config"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/admin"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/apply"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/community"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/news"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/notice"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/notification"
	"github.com/xh-polaris/meowchat-system/biz/infrastructure/mapper/user_role"
)

// Injectors from wire.go:

func NewSystemServerImpl() (*adaptor.SystemServerImpl, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	adminModel := admin.NewAdminModel(configConfig)
	applyModel := apply.NewApplyModel(configConfig)
	communityModel := community.NewCommunityModel(configConfig)
	newsModel := news.NewNewsModel(configConfig)
	noticeModel := notice.NewNoticeModel(configConfig)
	userRoleModel := user_role.NewUserRoleModel(configConfig)
	notificationModel := notification.NewNotificationModel(configConfig)
	systemServiceImpl := &service.SystemServiceImpl{
		AdminModel:        adminModel,
		ApplyModel:        applyModel,
		CommunityModel:    communityModel,
		NewsModel:         newsModel,
		NoticeModel:       noticeModel,
		UserRoleModel:     userRoleModel,
		NotificationModel: notificationModel,
	}
	systemServerImpl := &adaptor.SystemServerImpl{
		Config:        configConfig,
		SystemService: systemServiceImpl,
	}
	return systemServerImpl, nil
}
